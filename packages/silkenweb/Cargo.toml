[package]
name = "silkenweb"
version = { workspace = true }
authors = ["Simon Bourne <simonbourne@gmail.com>"]
edition = "2021"
description = "A library for building web apps"
readme = "../../README.md"
homepage = "https://github.com/silkenweb/silkenweb"
repository = "https://github.com/silkenweb/silkenweb"
license = "MIT OR Apache-2.0"

categories = ["gui", "web-programming"]
keywords = ["reactive", "web", "html", "browser", "dom"]

[features]
weak-refs = []
declarative-shadow-dom = []
css-transpile = ["silkenweb-macros/css-transpile"]

[package.metadata."docs.rs"]
all-features = true

[package.metadata.cargo-udeps.ignore]
# `parcel_selectors` is a transitive dependency through `lightningcss`. We
# depend on it purely to lock the version as otherwise builds keep getting
# broken by `lightningcss` updates.
normal = ["parcel_selectors"]
# `udeps` doesn't pick these dependencies up as they are ony in browser builds
development = ["silkenweb-test", "wasm-bindgen-test"]

[dependencies]
crossbeam = { workspace = true }
discard = { workspace = true }
futures = { workspace = true }
caseless = { workspace = true }
html-escape = { workspace = true }
indexmap = { workspace = true }
itertools = { workspace = true }
silkenweb-base = { workspace = true }
silkenweb-task = { workspace = true }
silkenweb-signals-ext = { workspace = true }
silkenweb-macros = { workspace = true }
paste = { workspace = true }
wasm-bindgen = { workspace = true }
futures-signals = { workspace = true }
console_error_panic_hook = { workspace = true }
pin-project = { workspace = true }
clonelet = { workspace = true }
parcel_selectors = { workspace = true }
wasm-rs-dbg = { workspace = true }
strum = { workspace = true, features = ["derive"] }

[dependencies.web-sys]
workspace = true
features = [
    "AnimationEvent",
    "Attr",
    "BeforeUnloadEvent",
    "CompositionEvent",
    "css",
    "CssStyleDeclaration",
    "CustomEvent",
    "DeviceMotionEvent",
    "DeviceOrientationEvent",
    "Document",
    "DomTokenList",
    "DragEvent",
    "Element",
    "FocusEvent",
    "HashChangeEvent",
    "History",
    "InputEvent",
    "KeyboardEvent",
    "Location",
    "MessageEvent",
    "MouseEvent",
    "NamedNodeMap",
    "Node",
    "PageTransitionEvent",
    "Performance",
    "PointerEvent",
    "PopStateEvent",
    "PromiseRejectionEvent",
    "SecurityPolicyViolationEvent",
    "ShadowRoot",
    "ShadowRootInit",
    "ShadowRootMode",
    "Storage",
    "StorageEvent",
    "Text",
    "TouchEvent",
    "TransitionEvent",
    "WebGlContextEvent",
    "Url",
    "WheelEvent",
    "Window",

    "HtmlAnchorElement",
    "HtmlAreaElement",
    "HtmlAudioElement",
    "HtmlBaseElement",
    "HtmlBrElement",
    "HtmlButtonElement",
    "HtmlCanvasElement",
    "HtmlDataElement",
    "HtmlDataListElement",
    "HtmlDetailsElement",
    "HtmlDialogElement",
    "HtmlDivElement",
    "HtmlDListElement",
    "HtmlElement",
    "HtmlEmbedElement",
    "HtmlFieldSetElement",
    "HtmlFormElement",
    "HtmlHeadElement",
    "HtmlHeadingElement",
    "HtmlHrElement",
    "HtmlIFrameElement",
    "HtmlImageElement",
    "HtmlInputElement",
    "HtmlLabelElement",
    "HtmlLegendElement",
    "HtmlLiElement",
    "HtmlLinkElement",
    "HtmlMapElement",
    "HtmlMenuElement",
    "HtmlMetaElement",
    "HtmlMeterElement",
    "HtmlModElement",
    "HtmlObjectElement",
    "HtmlOListElement",
    "HtmlOptGroupElement",
    "HtmlOptionElement",
    "HtmlOutputElement",
    "HtmlParagraphElement",
    "HtmlParamElement",
    "HtmlPictureElement",
    "HtmlPreElement",
    "HtmlProgressElement",
    "HtmlQuoteElement",
    "HtmlScriptElement",
    "HtmlSelectElement",
    "HtmlSlotElement",
    "HtmlSourceElement",
    "HtmlSpanElement",
    "HtmlStyleElement",
    "HtmlTableCaptionElement",
    "HtmlTableCellElement",
    "HtmlTableColElement",
    "HtmlTableElement",
    "HtmlTableRowElement",
    "HtmlTableSectionElement",
    "HtmlTemplateElement",
    "HtmlTextAreaElement",
    "HtmlTimeElement",
    "HtmlTitleElement",
    "HtmlTrackElement",
    "HtmlUListElement",
    "HtmlVideoElement",

    "SvgaElement",
    "SvgAnimateElement",
    "SvgAnimateMotionElement",
    "SvgAnimateTransformElement",
    "SvgCircleElement",
    "SvgClipPathElement",
    "SvgDefsElement",
    "SvgDescElement",
    "SvgEllipseElement",
    "SvgfeBlendElement",
    "SvgfeColorMatrixElement",
    "SvgfeComponentTransferElement",
    "SvgfeCompositeElement",
    "SvgfeConvolveMatrixElement",
    "SvgfeDiffuseLightingElement",
    "SvgfeDisplacementMapElement",
    "SvgfeDistantLightElement",
    "SvgfeDropShadowElement",
    "SvgfeFloodElement",
    "SvgfeFuncAElement",
    "SvgfeFuncBElement",
    "SvgfeFuncGElement",
    "SvgfeFuncRElement",
    "SvgfeGaussianBlurElement",
    "SvgfeImageElement",
    "SvgfeMergeElement",
    "SvgfeMergeNodeElement",
    "SvgfeMorphologyElement",
    "SvgfeOffsetElement",
    "SvgfePointLightElement",
    "SvgfeSpecularLightingElement",
    "SvgfeSpotLightElement",
    "SvgfeTileElement",
    "SvgfeTurbulenceElement",
    "SvgFilterElement",
    "SvggElement",
    "SvgImageElement",
    "SvgLineElement",
    "SvgLinearGradientElement",
    "SvgMarkerElement",
    "SvgMaskElement",
    "SvgMetadataElement",
    "SvgmPathElement",
    "SvgPatternElement",
    "SvgPolygonElement",
    "SvgPolylineElement",
    "SvgRadialGradientElement",
    "SvgScriptElement",
    "SvgSetElement",
    "SvgStopElement",
    "SvgStyleElement",
    "SvgSwitchElement",
    "SvgSymbolElement",
    "SvgTextElement",
    "SvgTextPathElement",
    "SvgTitleElement",
    "SvgtSpanElement",
    "SvgViewElement",
    "SvgsvgElement",
    "SvgPathElement",
    "SvgRectElement",
    "SvgUseElement",
]

[target.'cfg(all(target_arch = "wasm32", target_os = "unknown"))'.dependencies]
gloo-timers = { workspace = true, features = ["futures"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["rt", "macros", "time"] }
tokio-stream = { workspace = true, features = ["time"] }

[dev-dependencies]
# We don't use the workspace version here. Currently, crates with cyclic
# `dev-dependencies` [can't be published][issue-4242]. As a [workaround], we
# don't specify the version of cyclic dependencies.
# 
# [issue-4242]: https://github.com/rust-lang/cargo/issues/4242
# [workaround]: https://github.com/rust-lang/futures-rs/pull/2305
silkenweb-test = { path = "../../packages/test" }
wasm-bindgen-test = { workspace = true }
itertools = { workspace = true }
criterion = { workspace = true, default-features = false }
trybuild = { workspace = true }

[[bench]]
name = "ssr"
harness = false
